/**
 * * @Classname BinaryTree1
 * * @Description TODO
 * * @Date 2021/6/30 下午9:45
 * * @Created by yujiale
 * <p>
 * 二叉树的基本概念
 * 二叉树也是有序树
 * *** 每个节点的度最大为2  （最多拥有两个子树）
 * *** 左子树和右子树是有顺序的
 * *** 即使某个节点只有一颗树，也要区分左右子树。
 * <p>
 * 二叉树的特性
 * 非空二叉树的第i层，最多有 2的（i-1）个节点（i》1）
 * 在高度为h的二叉树上最多有2的（h-1）个节点（h》1）
 * 对于任何一颗非空二叉树，如果叶子节点个数为n0，度为2的节点个数为n2，则n0= n2+1；
 * ** 假设度为1的节点数为n1，那么二叉树的节点总数是n = n0+n1+n2
 * 二叉树的边数 T = n0+n1+n2-1(总节点 -1 rp)
 * <p>
 * <p>
 * 真二叉树：所有节点的度要么为0 要么为2（properBinaryTree）
 * 满二叉树：所有节点的度要么为0 要么为2，且所有的叶子节点都必须在最后一层（FullBinaryTree)
 * *** 在同样高度的二叉树中，满二叉树的叶子节点是最多的、总节点数量也是最多的
 * *** 满二叉树一定是真二叉树，真二叉树不一定是满二叉树
 * *** 假设满二叉树的高度为h，则
 * **** 第i层的节点数量是： 2的i-1
 * **** 叶子节点的数量是： 2的h-1
 * **** 总节点的数量是： 2的h次方-1
 *
 * 完全二叉树  Complete Binary Tree
 * 对节点从上到下、从左到右开始编号，其所有的编号都能与相同高度的满二叉树中的编号对应
 * *** 叶子节点只会出现在最后2层，且最后一层的叶子节点豆靠左对齐
 * *** 满二叉树一定是完全二叉树，完全二叉树不一定是满二叉树
 *
 */
public class BinaryTree {
}
